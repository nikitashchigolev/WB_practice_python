Introduction 
1.	
Primary key служит для однозначной идентификации каждой записи в таблице, и поэтому дублирование значений primary key не допускается. 
Важно упомянуть, что PK constraint указывает, что столбец или группа столбцов могут использоваться в качестве уникального идентификатора строк в таблице. 
Это предполагает, что значения должны быть уникальными (unique) и не быть нулевыми (not null).
2.	
Redis – (remote dictionary server) — система управления базами данных класса NoSQL с открытым исходным кодом, работающая со структурами данных типа 
«ключ — значение», а также являющаяся резидентной, то есть in-memory database, размещаемой в оперативной памяти.
Благодаря минимальному времени отклика и высокой пропускной способности Redis используется как для баз данных, так и для реализации кэшей, управления сеансами, 
онлайн игр, обнаружения мошенничества, таблиц лидеров, аналитики в реальном времени, геопространственной индексации, совместного использования поездок, социальных сетей и потоковых приложений.
По теореме CAP имеет свойства согласованности (consistency) и устойчивости к распределению (partition tolerance).
3.	
В MongoDB документ является аналогом строки в реляционной СУБД, а коллекция - аналог таблицы.
Предположим, у вас есть таблица "users" в реляционной СУБД, которая содержит информацию о пользователях. 
В MongoDB это будет выглядеть как коллекция "users", и каждый пользователь будет представлен документом. Вот пример аналогичного документа в MongoDB:
{
   "_id": ObjectId("5f7f67e8b35cd408f033f8c5"), // Уникальный идентификатор документа
   "username": "john_smith",
   "first_name": "John",
   "last_name": "Smith",
   "email": "john@example.com",
   "age": 45,
   "address": {
      "street": "123 Main St",
      "city": "New York",
      "state": "NY"
   },
   "interests": ["reading", "traveling", "music"]
}
Этот документ представляет информацию о пользователе, включая его имя, адрес, возраст и интересы. Каждый документ в коллекции "users" 
может иметь разную структуру, и это позволяет гибко хранить и извлекать данные в MongoDB.
4.
•	Анализ поведения знаменитостей в социальной сети: Рекомендуется использовать графовые базы данных, такие как 
Amazon Neptune, Neo4j, InfoGrid. Эти СУБД могут оперировать взаимосвязями, то есть строить их и выполнять навигацию по ним. 
Они обеспечивают наглядность представления и простоту внесения изменений в схему базы данных.
•	Онлайн-аналитика действий пользователей на сайте онлайн магазина: Для этой задачи подходят реляционные СУБД, такие как 
PostgreSQL, MySQL или иногда NoSQL СУБД, такие как Apache Cassandra, в зависимости от конкретных требований. 
Реляционные СУБД хорошо подходят для структурированных данных, таких как информация о клиентах, товарах и заказах.
•	Анализ документации по фильмам и сериалам: Для хранения и анализа данных о фильмах и сериалах, которые могут иметь разную структуру, 
можно использовать документо-ориентированные СУБД, такие как MongoDB, Amazon DocumentDB, CouchDB. Это позволит хранить данные с гибкой структурой и легко извлекать их.
•	Проектирование наиболее оптимальных маршрутов поставок для маркетплейса: Для задачи маршрутизации и оптимизации маршрутов можно использовать 
геоинформационные СУБД, такие как PostgreSQL с расширением PostGIS. Это позволит работать с географическими данными и вычислять оптимальные маршруты.
•	Хранение кэшированных HTML страниц пользователей, посещающих сайт: Для кэширования HTML страниц можно использовать быстрые кэширующие СУБД, такие как 
Redis или Memcached. Эти системы предназначены для хранения данных в оперативной памяти и обеспечивают быстрый доступ к данным, что подходит для кэширования веб-страниц.

Data Manipulation Language
1.	
Написание команд при выборе данных из таблицы производится в следующем порядке:
SELECT FROM WHERE GROUP BY HAVING ORDER BY LIMIT
Выполнение команд при запуске отработки запроса производится в следующем порядке:
FROM WHERE GROUP BY HAVING SELECT ORDER BY LIMIT
2.	
Команда DELETE удаляет из указанной таблицы строки, удовлетворяющие условию WHERE. Если предложение WHERE отсутствует, 
она удаляет из таблицы все строки, в результате будет получена рабочая, но пустая таблица. Поэтому удалить таблицу с помощью оператора DELETE нельзя.
Команда DROP TABLE удаляет всю таблицу и её структуру из базы данных, и это действие не может быть отменено.
7.
В PostgreSQL в предикатах WHERE нельзя использовать псевдонимы столбцов, определенные в том же самом SELECT выражении. Все дело в порядке отработки запроса.
Для того, чтобы запрос работал, необходимо заменить псевдоним на выражение.

SELECT old_price - new_price AS diff 
FROM goods 
WHERE old_price - new_price > 100;

